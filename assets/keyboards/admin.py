from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from utils.settings import get_setting


def admin_menu() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="üí∞ –î–æ–Ω–∞—Ç"))
	keyboard.row(KeyboardButton(text="üì£ –†–µ–∫–ª–∞–º–∞"), KeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞"))
	keyboard.row(KeyboardButton(text="‚ú® –ü—Ä–æ–º–æ–∫–æ–¥—ã"), KeyboardButton(text="üì• –í—ã–≥—Ä—É–∑–∫–∞"))
	keyboard.row(KeyboardButton(text="üåü –ú–æ–¥—É–ª–∏"), KeyboardButton(text="üîô –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é"))
	return keyboard.as_markup(resize_keyboard=True)


def my_modules_kb(module_keys: list, index: int, user_id: int, mod: str) -> InlineKeyboardMarkup:
	keyboard = InlineKeyboardBuilder()
	keyboard.row(
		InlineKeyboardButton(text="‚Äπ", callback_data=f"mymodules-list_{index}_down|{user_id}"),
		InlineKeyboardButton(text=f"{index+1}/{len(module_keys)}", callback_data="userbotik"),
		InlineKeyboardButton(text="‚Ä∫", callback_data=f"mymodules-list_{index}_up|{user_id}")
	)
	keyboard.row(InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"dell-modul_{mod}|{user_id}"))
	return keyboard.as_markup()


def load_modules_type(user_id: int, amount: tuple) -> InlineKeyboardMarkup:
	keyboard = InlineKeyboardBuilder()
	keyboard.row(InlineKeyboardButton(text=f"üïπ –ò–≥—Ä—ã ({amount[0]})", callback_data=f"mod-catalog_games|{user_id}"))
	keyboard.row(InlineKeyboardButton(text=f"üëæ –ò–≤–µ–Ω—Ç—ã ({amount[1]})", callback_data=f"mod-catalog_events|{user_id}"))
	keyboard.row(InlineKeyboardButton(text=f"‚ú® –†–∞–∑–Ω—ã–µ ({amount[2]})", callback_data=f"mod-catalog_other|{user_id}"))
	keyboard.row(InlineKeyboardButton(text=f"‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ ({amount[3]})", callback_data=f"mod-catalog_system|{user_id}"))
	return keyboard.as_markup()


def load_modules_kb(module_keys: list, index: int, user_id: int, mod: str, modules: dict) -> InlineKeyboardMarkup:
	keyboard = InlineKeyboardBuilder()
	keyboard.row(
		InlineKeyboardButton(text="‚Äπ", callback_data=f"catalogmod-list_{index}_down|{user_id}"),
		InlineKeyboardButton(text=f"{index+1}/{len(module_keys)}", callback_data="userbotik"),
		InlineKeyboardButton(text="‚Ä∫", callback_data=f"catalogmod-list_{index}_up|{user_id}")
	)

	if mod in modules:
		keyboard.row(InlineKeyboardButton(text="‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω", callback_data="userbotik"))
	else:
		keyboard.row(InlineKeyboardButton(text="üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å", callback_data=f"load-modul_{mod}|{user_id}"))

	return keyboard.as_markup()


def modules_menu() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="üõé –ó–∞–≥—Ä—É–∂–µ–Ω—ã–µ"), KeyboardButton(text="üìÇ –ö–∞—Ç–∞–ª–æ–≥"))
	keyboard.row(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))
	return keyboard.as_markup(resize_keyboard=True)


def unloading_menu() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="üíæ –ë–¥"), KeyboardButton(text="‚ùóÔ∏è –û—à–∏–±–∫–∏"), KeyboardButton(text="üìã –õ–æ–≥–∏"))
	keyboard.row(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))
	return keyboard.as_markup(resize_keyboard=True)


def ads_menu() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="üìç –†–∞—Å—Å—ã–ª–∫–∞"), KeyboardButton(text="ü™™ –¢–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º—ã"))
	keyboard.row(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))
	return keyboard.as_markup(resize_keyboard=True)


def cancel() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="–û—Ç–º–µ–Ω–∞"))
	return keyboard.as_markup(resize_keyboard=True)


def update_bot(force: bool = False) -> InlineKeyboardMarkup:
	force = 1 if force else 0
	keyboard = InlineKeyboardBuilder()
	keyboard.row(InlineKeyboardButton(text="üêô –û–±–Ω–æ–≤–∏—Ç—å", callback_data=f"update-bot_{force}"))
	return keyboard.as_markup()


def promo_menu() -> ReplyKeyboardMarkup:
	keyboard = ReplyKeyboardBuilder()
	keyboard.row(KeyboardButton(text="üìñ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ"), KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ"))
	keyboard.row(KeyboardButton(text="‚ÑπÔ∏è –ü—Ä–æ–º–æ –∏–Ω—Ñ–æ"))
	keyboard.row(KeyboardButton(text="üîô –ù–∞–∑–∞–¥"))
	return keyboard.as_markup(resize_keyboard=True)


def admin_donat_menu(user_id: int) -> InlineKeyboardMarkup:
	keyboards = InlineKeyboardBuilder()

	donat_emj= "‚úÖ" if get_setting(key="stars_donat", default=False) else "‚ùå"
	donat_action = "false" if get_setting(key="stars_donat", default=False) else "true"

	refund_emj = "‚úÖ" if get_setting(key="refund", default=False) else "‚ùå"
	refund_action = "false" if get_setting(key="refund", default=False) else "true"

	keyboards.row(InlineKeyboardButton(text=f"{donat_emj} –î–æ–Ω–∞—Ç —á–µ—Ä–µ–∑ –∑–≤—ë–∑–¥—ã", callback_data=f"adm-donat_1_{donat_action}|{user_id}"))
	keyboards.row(InlineKeyboardButton(text=f"{refund_emj} –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤", callback_data=f"adm-donat_2_{refund_action}|{user_id}"))

	return keyboards.as_markup()