import time
import re

from aiogram import types, Dispatcher
from aiogram.filters import Command

from assets.transform import transform_int as tr
from assets.antispam import admin_only
from commands.admin import db
from commands.db import url_name
from filters.custom import StartsWith


@admin_only()
async def sql(message: types.Message):
    res = await db.zap_sql(message.text[message.text.find(' '):])
    bot_msg = await message.answer(f'üïò –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞...')
    if not res:
        await bot_msg.edit_text(f"üöÄ SQL –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.")
    else:
        await bot_msg.edit_text(f"‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏\n‚ö†Ô∏è –û—à–∏–±–∫–∞: {res}")
        
        
@admin_only()
async def ban(message: types.Message):
    try:
        user_id, time_str, *reason = message.get_args().split()
        time_s = sum(int(value) * {'–¥': 86400, '—á': 3600, '–º': 60}[unit] for value, unit in re.findall(r'(\d+)([–¥—á–º])', time_str))
        time_s = int(time.time()) + time_s
        reason = ' '.join(reason) if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    except:
        await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /banb [–∏–≥—Ä–æ–≤–æ–π id] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]")
        return
    
    await db.new_ban(user_id, time_s, reason)
    await message.answer(f'üìõ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ {time_str}\n–ü—Ä–∏—á–∏–Ω–∞: <i>{reason}</i>')


@admin_only()
async def unban(message: types.Message):
    try:
        user_id = int(message.text.split()[1])
    except:
        await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /unbanb [–∏–≥—Ä–æ–≤–æ–π id]")
        return
    
    await db.unban_user(user_id)
    await message.answer(f'üõ° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.')
    

@admin_only()
async def take_the_money(message: types.Message):
    user_id = message.from_user.id
    url = await url_name(user_id)

    try:
        r_user_id = message.reply_to_message.from_user.id
        r_url = await url_name(user_id)
    except:
        await message.answer(f'{url}, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
        return

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å.')
        return

    await db.take_the_money(r_user_id, summ)
    await message.answer(f'{url}, –≤—ã –∑–∞–±—Ä–∞–ª–∏ {tr(summ)}$ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {r_url}')
    
    
@admin_only()
async def reset_the_money(message: types.Message):
    user_id = message.from_user.id
    url = await url_name(user_id)

    try:
        r_user_id = message.reply_to_message.from_user.id
        r_url = await url_name(user_id)
    except:
        await message.answer(f'{url}, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
        return

    await db.reset_the_money(r_user_id)
    await message.answer(f'{url}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {r_url} –æ–±–Ω—É–ª–µ–Ω!')


def reg(dp: Dispatcher):
    dp.message.register(sql, Command("sql"))
    dp.message.register(ban, Command("banb"))
    dp.message.register(unban, Command("unbanb"))
    dp.message.register(take_the_money, StartsWith("–∑–∞–±—Ä–∞—Ç—å"))
    dp.message.register(reset_the_money, StartsWith("–æ–±–Ω—É–ª–∏—Ç—å"))
