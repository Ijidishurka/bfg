import random
from datetime import datetime

from aiogram import Dispatcher, types
from aiogram.filters import Command

from assets.antispam import antispam
from commands.db import getban
from assets.classes import CustomEvent
from assets import keyboards as kb
import config as cfg
from user import BFGuser

CONFIG = {
    "hello_text": f'''ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ä—Ç, –ö—Ç–æ-—Ç–æ! –ú–µ–Ω—è –∑–æ–≤—É—Ç BFG, —Ç–≤–æ–π –≤–µ—Ä–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç.

üéÆ –£ –º–µ–Ω—è –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏–≥—Ä, —á—Ç–æ–±—ã —Å–∫—Ä–∞—Å–∏—Ç—å —Ç–≤–æ—ë –≤—Ä–µ–º—è, –±—É–¥—å —Ç—ã –æ–¥–∏–Ω –∏–ª–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π! (–ö—Å—Ç–∞—Ç–∏, –≤–º–µ—Å—Ç–µ –≤—Å–µ–≥–¥–∞ –≤–µ—Å–µ–ª–µ–µ) üíô
üîç –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Ç—ã –º–æ–∂–µ—à—å, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É ¬´–ø–æ–º–æ—â—å¬ª.

<a href="{cfg.channel}">üîà –ù–∞—à –∫–∞–Ω–∞–ª</a>
<a href="{cfg.chat}">üí¨ –ù–∞—à —á–∞—Ç</a>''',
    
    "hello_text2": f"üöÄ –ù–µ —É–≤–µ—Ä–µ–Ω, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É —á–∞—Ç—É {cfg.bot_name}: {cfg.chat}",
    
    "sticker_id": ["CAACAgQAAxkBAAEKs6JlSQUtGTtSzXGVcJGBe0PwnWkI9QACRwkAAm0NeFIe5FE9nk15XTME"]
}


async def on_start(message: types.Message):
    if len(message.text) >= 2:
        await CustomEvent.emit('start_event', {'message': message})

    ban = await getban(message.from_user.id)
    
    if ban:
        dtime = datetime.fromtimestamp(ban[1]).strftime('%Y-%m-%d –≤ %H:%M:%S')
        await message.answer(f'‚õîÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ –¥–æ <b>{dtime}</b>\n–ü—Ä–∏—á–∏–Ω–∞: <i>{ban[2]}</i>')
        return
    
    sticker = random.choice(CONFIG['sticker_id'])
    await message.answer_sticker(sticker=sticker)
    await message.answer(CONFIG['hello_text'], disable_web_page_preview=True, reply_markup=kb.start())
    await message.answer(CONFIG['hello_text2'], disable_web_page_preview=True)


async def terms_cmd(message: types.Message):
    await message.answer("""üìÑ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</b>

1. <b>–û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è</b>
1.1. –ù–∞—Å—Ç–æ—è—â–µ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞ (–¥–∞–ª–µ–µ ¬´–ë–æ—Ç¬ª –∏–ª–∏ ¬´–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª) –∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
1.2. –ò—Å–ø–æ–ª—å–∑—É—è –ë–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.
1.3. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–∞ –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö.

2. <b>–ü—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏</b>
2.1. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—è–∑—É–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞.
2.2. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞.
2.3. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –∏–∑–º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞, —É–¥–∞–ª—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–µ—Ö.—Ä–∞–±–æ—Ç—ã.
2.4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è —Å–æ–±–ª—é–¥–∞—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –∏ –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞.
2.5. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∏ –±–æ—Ç–æ–≤.

3. <b>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è</b>
3.1. –í—Å–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã –∏ –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç –≤–æ–∑–≤—Ä–∞—Ç—É.
3.2. –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—ã–¥–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫.
3.3. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ ‚Äî –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.

4. <b>–î–µ–π—Å—Ç–≤–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è</b>
4.1. –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.
4.2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º –ø–æ—Ä—è–¥–∫–µ.
4.3. –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è ‚Äî –±–µ—Å—Å—Ä–æ—á–Ω–æ.
4.4. –ò–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º.""")


@antispam
async def new_message(message: types.Message, user: BFGuser):
    # –î–ª—è –≤—ã–∑–æ–≤–∞ –≤ –º–æ–¥—É–ª—è—Ö —Å –ø–æ–º–æ—â—å—é FunEvent.subscribe("new_message", –≤–∞—à–∞_—Ñ—É–Ω–∫—Ü–∏—è)
    pass


def reg(dp: Dispatcher):
    dp.message.register(on_start, Command("start"))
    dp.message.register(terms_cmd, Command("terms"))
    dp.message.register(new_message)
