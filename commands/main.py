from datetime import datetime
from aiogram import Dispatcher, types
from commands.db import reg_user, getban
from assets.classes import CastomEvent
from assets import kb
import random
import config as cfg


CONFIG = {
    "hello_text": f'''ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ä—Ç, –ö—Ç–æ-—Ç–æ! –ú–µ–Ω—è –∑–æ–≤—É—Ç BFG, —Ç–≤–æ–π –≤–µ—Ä–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç.

üéÆ –£ –º–µ–Ω—è –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏–≥—Ä, —á—Ç–æ–±—ã —Å–∫—Ä–∞—Å–∏—Ç—å —Ç–≤–æ—ë –≤—Ä–µ–º—è, –±—É–¥—å —Ç—ã –æ–¥–∏–Ω –∏–ª–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¥—Ä—É–∑–µ–π! (–ö—Å—Ç–∞—Ç–∏, –≤–º–µ—Å—Ç–µ –≤—Å–µ–≥–¥–∞ –≤–µ—Å–µ–ª–µ–µ) üíô
üîç –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Ç—ã –º–æ–∂–µ—à—å, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É ¬´–ø–æ–º–æ—â—å¬ª.

<a href="{cfg.chanell}">üîà –ù–∞—à –∫–∞–Ω–∞–ª</a>
<a href="{cfg.chat}">üí¨ –ù–∞—à —á–∞—Ç</a>''',
    
    "hello_text2": f"üöÄ –ù–µ —É–≤–µ—Ä–µ–Ω, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É —á–∞—Ç—É {cfg.bot_name}: {cfg.chat}",
    
    "sticker_id": ["CAACAgQAAxkBAAEKs6JlSQUtGTtSzXGVcJGBe0PwnWkI9QACRwkAAm0NeFIe5FE9nk15XTME"]
}


async def on_start(message: types.Message):
    if len(message.text) >= 2:
        await CastomEvent.emit('start_event', {'message': message})
        
    # await reg_user(message.from_user.id)
    ban = await getban(message.from_user.id)
    
    if ban:
        dtime = datetime.fromtimestamp(ban[1]).strftime('%Y-%m-%d –≤ %H:%M:%S')
        await message.answer(f'‚õîÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ –¥–æ <b>{dtime}</b>\n–ü—Ä–∏—á–∏–Ω–∞: <i>{ban[2]}</i>')
        return
    
    sticker = random.choice(CONFIG['sticker_id'])
    await message.answer_sticker(sticker=sticker)
    await message.answer(CONFIG['hello_text'], disable_web_page_preview=True, reply_markup=kb.start())
    await message.answer(CONFIG['hello_text2'], disable_web_page_preview=True)


async def geturl(id, txt):
    url = f'<a href="tg://user?id={id}">{txt}</a>'
    return url


def reg(dp: Dispatcher):
    dp.register_message_handler(on_start, commands=['start'])