from aiogram import Dispatcher, types
from aiogram.filters import Command

from assets.antispam import new_earning, antispam_earning, antispam
from filters.custom import StartsWith
from assets import keyboards as kb
from utils.settings import get_setting
from user import BFGuser
from bot import bot

buy_stars_messages = set()  # {(user_id, chat_id, message_id)}


@antispam
async def help_cmd(message: types.Message):
    await message.answer(text="‚ÄºÔ∏è <b>–í—Å–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã –∏ –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç –≤–æ–∑–≤—Ä–∞—Ç—É!</b>")


@antispam_earning
async def donat_cmd(call: types.CallbackQuery):
    user_id = call.from_user.id

    text = (
        "‚≠ê –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –¥–æ–Ω–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é.\n\n"
        "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 500)."
    )

    msg = await call.message.edit_text(text=text, reply_markup=kb.donat_select_amount(user_id=user_id))
    buy_stars_messages.add((user_id, msg.chat.id, msg.message_id))


@antispam_earning
async def check_keyboard_amount_cmd(call: types.CallbackQuery):
    user_id = call.from_user.id
    stars = int(call.data.split("_")[1].split("|")[0])

    text = (
        f"üí∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å <b>{stars}‚≠ê</b> —á–µ—Ä–µ–∑ Telegram Stars?\n"
        f"üìç –í—ã –ø–æ–ª—É—á–∏—Ç–µ <b>{stars} B-Coins</b>.\n\n"
        "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ."
    )

    await call.message.edit_text(text=text, reply_markup=kb.confirm_donat(user_id=user_id, stars=stars))


async def check_amount_cmd(message: types.Message, user: BFGuser, event_type: str):
    if event_type != "message":
        return

    user_id = message.from_user.id
    chat_id = message.chat.id
    message_id = message.reply_to_message.message_id

    if not message.reply_to_message or not message.reply_to_message.text.startswith("‚≠ê –í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è"):
        return

    if not get_setting(key="stars_donat", default=False) or not (user_id, chat_id, message_id) in buy_stars_messages:
        return

    try:
        stars = int(message.text)
    except:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
        return

    if stars <= 0:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
        return

    if stars > 25_000:
        await message.answer("‚ùå –ó–∞ —Ä–∞–∑ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 25000 B-Coins.")
        return

    buy_stars_messages.discard((user_id, chat_id, message_id))

    text = (
        f"üí∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å <b>{stars}‚≠ê</b> —á–µ—Ä–µ–∑ Telegram Stars?\n"
        f"üìç –í—ã –ø–æ–ª—É—á–∏—Ç–µ <b>{stars} B-Coins</b>.\n\n"
        "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ."
    )

    await bot.delete_message(chat_id=chat_id, message_id=message_id)
    await message.delete()

    msg = await message.answer(text=text, reply_markup=kb.confirm_donat(user_id=user_id, stars=stars))
    await new_earning(msg=msg)


@antispam_earning
async def buy_stars_cmd(call: types.CallbackQuery):
    await call.answer(text="–ü–æ–∫—É–ø–∫–∞ –∑–∞ –∑–≤—ë–∑–¥—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞!", show_alert=True)


def reg(dp: Dispatcher):
    dp.message.register(help_cmd, Command("paysupport"))
    dp.callback_query.register(donat_cmd, StartsWith("donat-stars"))
    dp.callback_query.register(check_keyboard_amount_cmd, StartsWith("select-stars"))
    dp.callback_query.register(buy_stars_cmd, StartsWith("buy-stars"))
