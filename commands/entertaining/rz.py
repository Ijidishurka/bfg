import random
import re

from aiogram import Dispatcher, types
from assets.antispam import antispam
from commands.db import get_colvo_users, setname
from assets.gettime import bonustime, kaznatime, lucktime
from assets.transform import transform_int as tr
import config as cfg
from filters.custom import StartsWith, TextIn
from user import BFGuser, BFGconst


@antispam
async def shar_cmd(message: types.Message, user: BFGuser):
    list = ["–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞", "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –Ω–µ—Ç",
            "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –Ω–µ—Ç", "–î–∞", "–ù–µ—Ç", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º"]
    await message.answer(random.choice(list))


@antispam
async def vibor_cmd(message: types.Message, user: BFGuser):
    list = ["–ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–Ω–∞—Ç –ª—É—á—à–µ", "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ø–µ—Ä–≤—ã–π", "–í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–Ω–∞—Ç –ª—É—á—à–µ", "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –≤—Ç–æ—Ä–æ–π"]
    await message.answer(random.choice(list))


@antispam
async def shans_cmd(message: types.Message, user: BFGuser):
    await message.answer(f'–®–∞–Ω—Å —ç—Ç–æ–≥–æ - {random.randint(1, 100)}%')


@antispam
async def set_name_cmd(message: types.Message, user: BFGuser):
    user_id = message.from_user.id
    win, lose = BFGconst.emj()
    
    try:
        name = " ".join(message.text.split()[2:])
    except:
        await message.answer(f'{user.url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ {lose}')
        return

    climit = {0: 20, 1: 25, 2: 30, 3: 45, 4: 50}.get(user.status, 20)

    if re.search(r'<|>|@|t\.me|http', name):
        await message.answer(f'{user.url}, –≤–∞—à –Ω–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã {lose}')
        return

    if len(name) < 5:
        await message.answer(f'{user.url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ {lose}')
        return

    if len(name) > climit:
        await message.answer(f'{user.url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ {climit} —Å–∏–º–≤–æ–ª–æ–≤ {lose}')
        return

    await setname(name, user_id)
    await message.answer(f'–í–∞—à –Ω–∏–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ¬´{name}¬ª')


@antispam
async def kazna_cmd(message: types.Message, user: BFGuser):
    await message.answer(f'üí∞ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–∞–∑–Ω–∞ —à—Ç–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 98.894.419.531.599.545$')


@antispam
async def ogr_kazna(message: types.Message, user: BFGuser):
    user_id = message.from_user.id
    bt, left = await kaznatime(user_id)
    
    if bt == 1:
        await message.answer(f'{user.url}, –≤—ã —É–∂–µ –≥—Ä–∞–±–∏–ª–∏ –∫–∞–∑–Ω—É —Å–µ–≥–æ–¥–Ω—è. –ë–µ–≥–∏—Ç–µ —Å–∫–æ—Ä–µ–µ, –ø–æ–ª–∏—Ü–∏—è —É–∂–µ –≤ –ø—É—Ç–∏ üö´')
        return

    if random.randint(1, 3) == 1:
        await message.answer(f'{user.url}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫–∞–∑–Ω—É ‚ùé')
        return

    summ = random.randint(100_000_000, 400_000_000)

    await user.balance.upd(summ, '+')
    await message.answer(f'{user.url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –∫–∞–∑–Ω—É. –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ {tr(summ)} ‚úÖ')


@antispam
async def try_luck_cmd(message: types.Message, user: BFGuser):
    user_id = message.from_user.id
    bt, left = await lucktime(user_id)
    
    if bt == 1:
        hours = left // 3600
        minutes = (left % 3600) // 60
        txt = f'{hours}—á {minutes}–º' if hours > 0 else f'{minutes}–º'
        await message.answer(f'{user.url}, —Ç—ã —É–∂–µ –∏—Å–ø—ã—Ç—ã–≤–∞–ª —Å–≤–æ—é —É–¥–∞—á—É, —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ç—ã —Å–º–æ–∂–µ—à—å —á–µ—Ä–µ–∑ {txt}')
        return

    summ = random.randint(10_000_000, 900_000_000)

    await user.biores.upd(summ, '+')
    await message.answer(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—ã—Ç–∞–ª–∏ —É–¥–∞—á—É –∏ –ø–æ–ª—É—á–∏–ª–∏ {tr(summ)}–∫–≥ –±–∏–æ—Ä–µ—Å—É—Ä—Å–∞ ‚ò£Ô∏è')


@antispam
async def bonus_cmd(message: types.Message, user: BFGuser):
    user_id = message.from_user.id
    bt, left = await bonustime(user_id)
    
    if bt == 1:
        hours = left // 3600
        minutes = (left % 3600) // 60
        txt = f'{hours}—á {minutes}–º' if hours > 0 else f'{minutes}–º'
        await message.answer(f'{user.url}, —Ç—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª(-–∞) –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å, —Å–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ {txt}')
        return

    i = random.randint(1, 4)
    
    if i == 1:
        summ = random.randint(1_000_000, 4_000_000)
        await user.balance.upd(summ, '+')
        txt = f'{tr(summ)}$ üí∞'
    elif i == 2:
        summ = random.randint(100, 950)
        await user.rating.upd(summ, '+')
        txt = f'{summ} —Ä–µ–π—Ç–∏–Ω–≥–∞ üëë'
    elif i == 3:
        summ = random.randint(1, 10)
        await user.case[1].upd(summ, '+')
        txt = f'–æ–±—ã—á–Ω—ã–π –∫–µ–π—Å  - {summ} üì¶'
    else:
        summ = random.randint(1, 10)
        await user.mine.matter.upd(summ, '+')
        txt = f'{summ} –º–∞—Ç–µ—Ä–∏–∏ üåå'
        
    await message.answer(f'{user.url}, –≤–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ {txt}')


@antispam
async def stats_cmd(message: types.Message, user: BFGuser):
    users, chats, uchats = await get_colvo_users()

    await message.answer(f'''üìä –ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: {tr(users)}
üìä –û–±—â–µ–µ –∫–æ–ª-–≤–æ —á–∞—Ç–æ–≤: {tr(chats)}
üìä –û–±—â–µ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –±–µ—Å–µ–¥–∞—Ö: {tr(uchats)}''')


@antispam
async def chat_list(message: types.Message, user: BFGuser):
    await message.answer(f'''üí≠ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –±–µ—Å–µ–¥–∞ –±–æ—Ç–∞: {cfg.chat}
üí≠ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: {cfg.channel}
üèÜ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç —Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏: ...''', disable_web_page_preview=True)


@antispam
async def my_name(message: types.Message, user: BFGuser):
    await message.answer(f'üóÇ –í–∞—à –Ω–∏–∫ - ¬´{user.name}¬ª')


def reg(dp: Dispatcher):
    dp.message.register(shar_cmd, StartsWith("—à–∞—Ä "))
    dp.message.register(vibor_cmd, StartsWith("–≤—ã–±–µ—Ä–∏ "))
    dp.message.register(shans_cmd, StartsWith("—à–∞–Ω—Å "))
    dp.message.register(set_name_cmd, StartsWith("—Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫"))
    dp.message.register(kazna_cmd, TextIn("–∫–∞–∑–Ω–∞"))
    dp.message.register(stats_cmd, TextIn("—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"))
    dp.message.register(bonus_cmd, TextIn("–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å"))
    dp.message.register(try_luck_cmd, TextIn("–∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É"))
    dp.message.register(ogr_kazna, TextIn("–æ–≥—Ä–∞–±–∏—Ç—å –∫–∞–∑–Ω—É", "–æ–≥—Ä–∞–±–∏—Ç—å –º–µ—Ä–∏—é"))
    dp.message.register(my_name, TextIn("–º–æ–π –Ω–∏–∫"))
    dp.message.register(chat_list, TextIn("!–±–µ—Å–µ–¥–∞"))
